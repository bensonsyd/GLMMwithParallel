samp <- cbind(samp, "e")
}
if(animalData$Row[j] < gridSize){
s <- animalData$Row[j] + 1
samp <- cbind(samp, "s")
}
if(animalData$Column[j] > 1){
w <- animalData$Column[j] - 1
samp <- cbind(samp, "w")
}
attempt <- sample(samp, 1)
if(attempt == "n"){
if(!any(animalData$Row[(hareStarting+1):(hareStarting+lynxStarting)] == n & animalData$Column[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Column[j])){
animalData$Row[j] <- n
}
}
if(attempt == "e"){
if(!any(animalData$Row[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Row[j] & animalData$Column[(hareStarting+1):(hareStarting+lynxStarting)] == e)){
animalData$Column[j] <- e
}
}
if(attempt == "s"){
if(!any(animalData$Row[(hareStarting+1):(hareStarting+lynxStarting)] == s & animalData$Column[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Column[j])){
animalData$Row[j] <- s
}
}
if(attempt == "w"){
if(!any(animalData$Row[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Row[j] & animalData$Column[(hareStarting+1):(hareStarting+lynxStarting)] == w)){
animalData$Column[j] <- w
}
}
}
}
if(animalData$Species[j] == 1 & animalData$Status[j] == 1){
samp <- c()
if(runif(1) < hareSpeed){
if(animalData$Row[j] > 1){
n <- animalData$Row[j] - 1
samp <- cbind(samp, "n")
}
if(animalData$Column[j] < gridSize){
e <- animalData$Column[j] + 1
samp <- cbind(samp, "e")
}
if(animalData$Row[j] < gridSize){
s <- animalData$Row[j] + 1
samp <- cbind(samp, "s")
}
if(animalData$Column[j] > 1){
w <- animalData$Column[j] - 1
samp <- cbind(samp, "w")
}
attempt <- sample(samp, 1)
if(attempt == "n"){
if(!any(animalData$Row[1:hareStarting] == n & animalData$Column[1:hareStarting] == animalData$Column[j])){
animalData$Row[j] <- n
}
}
if(attempt == "e"){
if(!any(animalData$Row[1:hareStarting] == animalData$Row[j] & animalData$Column[1:hareStarting] == e)){
animalData$Column[j] <- e
}
}
if(attempt == "s"){
if(!any(animalData$Row[1:hareStarting] == s & animalData$Column[1:hareStarting] == animalData$Column[j])){
animalData$Row[j] <- s
}
}
if(attempt == "w"){
if(!any(animalData$Row[1:hareStarting] == animalData$Row[j] & animalData$Column[1:hareStarting] == w)){
animalData$Column[j] <- w
}
}
}
if(any(animalData$Row[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Row[j] & animalData$Column[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Column[j])){
animalData$Status[j] <- 0
lynx <- (animalData$Row[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Row[j] & animalData$Column[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Column[j])
print(lynx)
lynx2 <- which(animalData$Row[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Row[j] & animalData$Column[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Column[j])
print(lynx2)
}
}
}
for(j in 1:length(animalData$Species)){
if(animalData$Status[j] == 1){
latticeImage[animalData$Row[j], animalData$Column[j]] <- animalData$Species[j]
}
}
if(displayImage == TRUE){
image(t(latticeImage), col = c("gray", "green", "red"))
Sys.sleep(0.25)
}
totalAnimals[i, "Hares"] <- sum(animalData$Status == 1 & animalData$Species == 1)
totalAnimals[i, "Lynx"] <- sum(animalData$Status == 1 & animalData$Species == 2)
}
return(totalAnimals)
}
hareLynx
hareLynx()
hareLynx <- function(hareSpeed=0.75, lynxSpeed=0.25, hareStarting=10, lynxStarting=3, timeSteps=20, gridSize=10, displayImage=TRUE){
totalAnimals <- data.frame(Hares = rep(NA, timeSteps), Lynx = rep(NA, timeSteps))
animalData <- data.frame(Status = rep(NA, hareStarting+lynxStarting), Species = rep(NA, hareStarting+lynxStarting), Row = rep(NA, hareStarting+lynxStarting), Column = rep(NA, hareStarting+lynxStarting), DaysSinceEating = rep(NA, hareStarting+lynxStarting))
animalData$Species[1:hareStarting] <- 1
animalData$Species[(hareStarting+1):(hareStarting+lynxStarting)] <- 2
animalData$Status[1:(hareStarting+lynxStarting)] <- 1
animalData$DaysSinceEating[1:(hareStarting+lynxStarting)] <- 0
animalData[1:hareStarting, "Row"] <- sample(c(1:gridSize), hareStarting)
animalData[1:hareStarting, "Column"] <- sample(c(1:gridSize), hareStarting)
animalData[(hareStarting+1):(hareStarting+lynxStarting), "Row"] <- sample(c(1:gridSize), lynxStarting)
animalData[(hareStarting+1):(hareStarting+lynxStarting), "Column"] <- sample(c(1:gridSize), lynxStarting)
latticeImage <- matrix(NA, nrow = gridSize, ncol = gridSize)
for(i in 1:timeSteps){
for(j in 1:gridSize){
for(k in 1:gridSize){
latticeImage[j,k] <- 0
}
}
for(j in 1:length(animalData$Species)){
if(animalData$Species[j] == 2 & animalData$Status[j] == 1){
samp <- c()
if(runif(1) < lynxSpeed){
if(animalData$Row[j] > 1){
n <- animalData$Row[j] - 1
samp <- cbind(samp, "n")
}
if(animalData$Column[j] < gridSize){
e <- animalData$Column[j] + 1
samp <- cbind(samp, "e")
}
if(animalData$Row[j] < gridSize){
s <- animalData$Row[j] + 1
samp <- cbind(samp, "s")
}
if(animalData$Column[j] > 1){
w <- animalData$Column[j] - 1
samp <- cbind(samp, "w")
}
attempt <- sample(samp, 1)
if(attempt == "n"){
if(!any(animalData$Row[(hareStarting+1):(hareStarting+lynxStarting)] == n & animalData$Column[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Column[j])){
animalData$Row[j] <- n
}
}
if(attempt == "e"){
if(!any(animalData$Row[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Row[j] & animalData$Column[(hareStarting+1):(hareStarting+lynxStarting)] == e)){
animalData$Column[j] <- e
}
}
if(attempt == "s"){
if(!any(animalData$Row[(hareStarting+1):(hareStarting+lynxStarting)] == s & animalData$Column[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Column[j])){
animalData$Row[j] <- s
}
}
if(attempt == "w"){
if(!any(animalData$Row[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Row[j] & animalData$Column[(hareStarting+1):(hareStarting+lynxStarting)] == w)){
animalData$Column[j] <- w
}
}
}
}
if(animalData$Species[j] == 1 & animalData$Status[j] == 1){
samp <- c()
if(runif(1) < hareSpeed){
if(animalData$Row[j] > 1){
n <- animalData$Row[j] - 1
samp <- cbind(samp, "n")
}
if(animalData$Column[j] < gridSize){
e <- animalData$Column[j] + 1
samp <- cbind(samp, "e")
}
if(animalData$Row[j] < gridSize){
s <- animalData$Row[j] + 1
samp <- cbind(samp, "s")
}
if(animalData$Column[j] > 1){
w <- animalData$Column[j] - 1
samp <- cbind(samp, "w")
}
attempt <- sample(samp, 1)
if(attempt == "n"){
if(!any(animalData$Row[1:hareStarting] == n & animalData$Column[1:hareStarting] == animalData$Column[j])){
animalData$Row[j] <- n
}
}
if(attempt == "e"){
if(!any(animalData$Row[1:hareStarting] == animalData$Row[j] & animalData$Column[1:hareStarting] == e)){
animalData$Column[j] <- e
}
}
if(attempt == "s"){
if(!any(animalData$Row[1:hareStarting] == s & animalData$Column[1:hareStarting] == animalData$Column[j])){
animalData$Row[j] <- s
}
}
if(attempt == "w"){
if(!any(animalData$Row[1:hareStarting] == animalData$Row[j] & animalData$Column[1:hareStarting] == w)){
animalData$Column[j] <- w
}
}
}
if(any(animalData$Row[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Row[j] & animalData$Column[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Column[j])){
animalData$Status[j] <- 0
lynx <- which(animalData$Row[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Row[j] & animalData$Column[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Column[j])
animalData$DaysSinceEating[hareStarting+lynx] <- 0
}
}
}
animalData$DaysSinceEating[1:(hareStarting+lynxStarting)] <- animalData$DaysSinceEating[1:(hareStarting+lynxStarting)] + 1
for(p in 1:lynxStarting){
if(animalData$DaysSinceEating[hareStarting+p] == 20){
animalData$Status[hareStarting+p] <- 0
}
}
for(j in 1:length(animalData$Species)){
if(animalData$Status[j] == 1){
latticeImage[animalData$Row[j], animalData$Column[j]] <- animalData$Species[j]
}
}
if(displayImage == TRUE){
image(t(latticeImage), col = c("gray", "green", "red"),
breaks = c(-0.5, 0.5, 1.5, 2.5))
Sys.sleep(0.25)
}
totalAnimals[i, "Hares"] <- sum(animalData$Status == 1 & animalData$Species == 1)
totalAnimals[i, "Lynx"] <- sum(animalData$Status == 1 & animalData$Species == 2)
}
return(totalAnimals)
}
hareLynx()
hareLynx()
hareLynx <- function(hareSpeed=0.75, lynxSpeed=0.25, hareStarting=10, lynxStarting=3, timeSteps=50, gridSize=10, displayImage=TRUE){
totalAnimals <- data.frame(Hares = rep(NA, timeSteps), Lynx = rep(NA, timeSteps))
animalData <- data.frame(Status = rep(NA, hareStarting+lynxStarting), Species = rep(NA, hareStarting+lynxStarting), Row = rep(NA, hareStarting+lynxStarting), Column = rep(NA, hareStarting+lynxStarting), DaysSinceEating = rep(NA, hareStarting+lynxStarting))
animalData$Species[1:hareStarting] <- 1
animalData$Species[(hareStarting+1):(hareStarting+lynxStarting)] <- 2
animalData$Status[1:(hareStarting+lynxStarting)] <- 1
animalData$DaysSinceEating[1:(hareStarting+lynxStarting)] <- 0
animalData[1:hareStarting, "Row"] <- sample(c(1:gridSize), hareStarting)
animalData[1:hareStarting, "Column"] <- sample(c(1:gridSize), hareStarting)
animalData[(hareStarting+1):(hareStarting+lynxStarting), "Row"] <- sample(c(1:gridSize), lynxStarting)
animalData[(hareStarting+1):(hareStarting+lynxStarting), "Column"] <- sample(c(1:gridSize), lynxStarting)
latticeImage <- matrix(NA, nrow = gridSize, ncol = gridSize)
for(i in 1:timeSteps){
for(j in 1:gridSize){
for(k in 1:gridSize){
latticeImage[j,k] <- 0
}
}
for(j in 1:length(animalData$Species)){
if(animalData$Species[j] == 2 & animalData$Status[j] == 1){
samp <- c()
if(runif(1) < lynxSpeed){
if(animalData$Row[j] > 1){
n <- animalData$Row[j] - 1
samp <- cbind(samp, "n")
}
if(animalData$Column[j] < gridSize){
e <- animalData$Column[j] + 1
samp <- cbind(samp, "e")
}
if(animalData$Row[j] < gridSize){
s <- animalData$Row[j] + 1
samp <- cbind(samp, "s")
}
if(animalData$Column[j] > 1){
w <- animalData$Column[j] - 1
samp <- cbind(samp, "w")
}
attempt <- sample(samp, 1)
if(attempt == "n"){
if(!any(animalData$Row[(hareStarting+1):(hareStarting+lynxStarting)] == n & animalData$Column[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Column[j])){
animalData$Row[j] <- n
}
}
if(attempt == "e"){
if(!any(animalData$Row[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Row[j] & animalData$Column[(hareStarting+1):(hareStarting+lynxStarting)] == e)){
animalData$Column[j] <- e
}
}
if(attempt == "s"){
if(!any(animalData$Row[(hareStarting+1):(hareStarting+lynxStarting)] == s & animalData$Column[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Column[j])){
animalData$Row[j] <- s
}
}
if(attempt == "w"){
if(!any(animalData$Row[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Row[j] & animalData$Column[(hareStarting+1):(hareStarting+lynxStarting)] == w)){
animalData$Column[j] <- w
}
}
}
}
if(animalData$Species[j] == 1 & animalData$Status[j] == 1){
samp <- c()
if(runif(1) < hareSpeed){
if(animalData$Row[j] > 1){
n <- animalData$Row[j] - 1
samp <- cbind(samp, "n")
}
if(animalData$Column[j] < gridSize){
e <- animalData$Column[j] + 1
samp <- cbind(samp, "e")
}
if(animalData$Row[j] < gridSize){
s <- animalData$Row[j] + 1
samp <- cbind(samp, "s")
}
if(animalData$Column[j] > 1){
w <- animalData$Column[j] - 1
samp <- cbind(samp, "w")
}
attempt <- sample(samp, 1)
if(attempt == "n"){
if(!any(animalData$Row[1:hareStarting] == n & animalData$Column[1:hareStarting] == animalData$Column[j])){
animalData$Row[j] <- n
}
}
if(attempt == "e"){
if(!any(animalData$Row[1:hareStarting] == animalData$Row[j] & animalData$Column[1:hareStarting] == e)){
animalData$Column[j] <- e
}
}
if(attempt == "s"){
if(!any(animalData$Row[1:hareStarting] == s & animalData$Column[1:hareStarting] == animalData$Column[j])){
animalData$Row[j] <- s
}
}
if(attempt == "w"){
if(!any(animalData$Row[1:hareStarting] == animalData$Row[j] & animalData$Column[1:hareStarting] == w)){
animalData$Column[j] <- w
}
}
}
if(any(animalData$Row[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Row[j] & animalData$Column[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Column[j])){
animalData$Status[j] <- 0
lynx <- which(animalData$Row[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Row[j] & animalData$Column[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Column[j])
animalData$DaysSinceEating[hareStarting+lynx] <- 0
}
}
}
animalData$DaysSinceEating[1:(hareStarting+lynxStarting)] <- animalData$DaysSinceEating[1:(hareStarting+lynxStarting)] + 1
for(p in 1:lynxStarting){
if(animalData$DaysSinceEating[hareStarting+p] == 20){
animalData$Status[hareStarting+p] <- 0
}
}
for(j in 1:length(animalData$Species)){
if(animalData$Status[j] == 1){
latticeImage[animalData$Row[j], animalData$Column[j]] <- animalData$Species[j]
}
}
if(displayImage == TRUE){
image(t(latticeImage), col = c("gray", "green", "red"),
breaks = c(-0.5, 0.5, 1.5, 2.5))
Sys.sleep(0.25)
}
totalAnimals[i, "Hares"] <- sum(animalData$Status == 1 & animalData$Species == 1)
totalAnimals[i, "Lynx"] <- sum(animalData$Status == 1 & animalData$Species == 2)
}
return(totalAnimals)
}
hareLynx()
hareLynx()
mean(replicate(100, hareLynx(displayImage = FALSE)[,"Lynx"]))
hareLynx <- function(hareSpeed=0.75, lynxSpeed=0.25, hareStarting=10, lynxStarting=3, timeSteps=50, gridSize=10, displayImage=TRUE){
totalAnimals <- data.frame(Hares = rep(NA, timeSteps), Lynx = rep(NA, timeSteps))
animalData <- data.frame(Status = rep(NA, hareStarting+lynxStarting), Species = rep(NA, hareStarting+lynxStarting), Row = rep(NA, hareStarting+lynxStarting), Column = rep(NA, hareStarting+lynxStarting), DaysSinceEating = rep(NA, hareStarting+lynxStarting))
animalData$Species[1:hareStarting] <- 1
animalData$Species[(hareStarting+1):(hareStarting+lynxStarting)] <- 2
animalData$Status[1:(hareStarting+lynxStarting)] <- 1
animalData$DaysSinceEating[1:(hareStarting+lynxStarting)] <- 0
animalData[1:hareStarting, "Row"] <- sample(c(1:gridSize), hareStarting)
animalData[1:hareStarting, "Column"] <- sample(c(1:gridSize), hareStarting)
animalData[(hareStarting+1):(hareStarting+lynxStarting), "Row"] <- sample(c(1:gridSize), lynxStarting)
animalData[(hareStarting+1):(hareStarting+lynxStarting), "Column"] <- sample(c(1:gridSize), lynxStarting)
latticeImage <- matrix(NA, nrow = gridSize, ncol = gridSize)
for(i in 1:timeSteps){
for(j in 1:gridSize){
for(k in 1:gridSize){
latticeImage[j,k] <- 0
}
}
for(j in 1:length(animalData$Species)){
if(animalData$Species[j] == 2 & animalData$Status[j] == 1){
samp <- c()
if(runif(1) < lynxSpeed){
if(animalData$Row[j] > 1){
n <- animalData$Row[j] - 1
samp <- cbind(samp, "n")
}
if(animalData$Column[j] < gridSize){
e <- animalData$Column[j] + 1
samp <- cbind(samp, "e")
}
if(animalData$Row[j] < gridSize){
s <- animalData$Row[j] + 1
samp <- cbind(samp, "s")
}
if(animalData$Column[j] > 1){
w <- animalData$Column[j] - 1
samp <- cbind(samp, "w")
}
attempt <- sample(samp, 1)
if(attempt == "n"){
if(!any(animalData$Row[(hareStarting+1):(hareStarting+lynxStarting)] == n & animalData$Column[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Column[j])){
animalData$Row[j] <- n
}
}
if(attempt == "e"){
if(!any(animalData$Row[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Row[j] & animalData$Column[(hareStarting+1):(hareStarting+lynxStarting)] == e)){
animalData$Column[j] <- e
}
}
if(attempt == "s"){
if(!any(animalData$Row[(hareStarting+1):(hareStarting+lynxStarting)] == s & animalData$Column[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Column[j])){
animalData$Row[j] <- s
}
}
if(attempt == "w"){
if(!any(animalData$Row[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Row[j] & animalData$Column[(hareStarting+1):(hareStarting+lynxStarting)] == w)){
animalData$Column[j] <- w
}
}
}
}
if(animalData$Species[j] == 1 & animalData$Status[j] == 1){
samp <- c()
if(runif(1) < hareSpeed){
if(animalData$Row[j] > 1){
n <- animalData$Row[j] - 1
samp <- cbind(samp, "n")
}
if(animalData$Column[j] < gridSize){
e <- animalData$Column[j] + 1
samp <- cbind(samp, "e")
}
if(animalData$Row[j] < gridSize){
s <- animalData$Row[j] + 1
samp <- cbind(samp, "s")
}
if(animalData$Column[j] > 1){
w <- animalData$Column[j] - 1
samp <- cbind(samp, "w")
}
attempt <- sample(samp, 1)
if(attempt == "n"){
if(!any(animalData$Row[1:hareStarting] == n & animalData$Column[1:hareStarting] == animalData$Column[j])){
animalData$Row[j] <- n
}
}
if(attempt == "e"){
if(!any(animalData$Row[1:hareStarting] == animalData$Row[j] & animalData$Column[1:hareStarting] == e)){
animalData$Column[j] <- e
}
}
if(attempt == "s"){
if(!any(animalData$Row[1:hareStarting] == s & animalData$Column[1:hareStarting] == animalData$Column[j])){
animalData$Row[j] <- s
}
}
if(attempt == "w"){
if(!any(animalData$Row[1:hareStarting] == animalData$Row[j] & animalData$Column[1:hareStarting] == w)){
animalData$Column[j] <- w
}
}
}
if(any(animalData$Row[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Row[j] & animalData$Column[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Column[j])){
animalData$Status[j] <- 0
lynx <- which(animalData$Row[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Row[j] & animalData$Column[(hareStarting+1):(hareStarting+lynxStarting)] == animalData$Column[j])
animalData$DaysSinceEating[hareStarting+lynx] <- 0
}
}
}
animalData$DaysSinceEating[1:(hareStarting+lynxStarting)] <- animalData$DaysSinceEating[1:(hareStarting+lynxStarting)] + 1
for(p in 1:lynxStarting){
if(animalData$DaysSinceEating[hareStarting+p] >= 20){
animalData$Status[hareStarting+p] <- 0
}
}
for(j in 1:length(animalData$Species)){
if(animalData$Status[j] == 1){
latticeImage[animalData$Row[j], animalData$Column[j]] <- animalData$Species[j]
}
}
if(displayImage == TRUE){
image(t(latticeImage), col = c("gray", "green", "red"),
breaks = c(-0.5, 0.5, 1.5, 2.5))
Sys.sleep(0.25)
}
totalAnimals[i, "Hares"] <- sum(animalData$Status == 1 & animalData$Species == 1)
totalAnimals[i, "Lynx"] <- sum(animalData$Status == 1 & animalData$Species == 2)
}
return(totalAnimals)
}
mean(replicate(100, hareLynx(displayImage = FALSE)[,"Lynx"]))
mean(replicate(100, hareLynx(lynxSpeed = .75, displayImage = FALSE)))
mean(replicate(100, hareLynx(lynxSpeed = .75, displayImage = FALSE)[,"Lynx"]))
?clusterExport
?foreach
install.packages("devtools")
library(devtools)
build(glmm)
build(/Users/sydneybenson/Documents/UST/R_Research/glmm-master)
build(Users/sydneybenson/Documents/UST/R_Research/glmm-master)
?build
build("/Users/sydneybenson/Documents/UST/R_Research/glmm-master")
build("glmm")
build("glmm")
setwd("~/Documents/UST/R_Research/glmm-master")
build("glmm")
R.home()
?clusterExport
